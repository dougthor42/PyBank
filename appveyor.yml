# This file taken directly from DRMaclver's hypothesis package.
# https://github.com/DRMacIver/hypothesis
# I will edit accordingly once I get my project going
#
# Also taken from
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml

#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

### ----------------------
### General Configuration
### ----------------------

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python34"
      PYTHON_VERSION: "3.4.3"
      PYTHON_ARCH: "64"

#    - PYTHON: "C:\\Python27-x64"
#      PYTHON_VERSION: "2.7.8"
#      PYTHON_ARCH: "64"
#
#    - PYTHON: "C:\\Python33"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "32"
#
#    - PYTHON: "C:\\Python33-x64"
#      PYTHON_VERSION: "3.3.5"
#      PYTHON_ARCH: "64"

#   - PYTHON: "C:\\Python34"
#     PYTHON_VERSION: "3.4.1"
#     PYTHON_ARCH: "32"

#   - PYTHON: "C:\\Python34-x64"
#     PYTHON_VERSION: "3.4.1"
#     PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: new-item "C:\\temp" -itemtype directory
  - ps: ls "C:\\"

  - ECHO "Powershell Version:"
  - ps: $PSVersionTable.PSVersion

#  - ECHO "Installed SDKs:"
#  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  - "powershell ./appveyor/install.ps1"

  # also install 7-zip, needed for extracting wxPython
  - "powershell ./appveyor/get-7zip.ps1"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # install dependencies
  #- "%CMD_IN_ENV% pip install -r dev-requirements.txt"
  #- "%CMD_IN_ENV% pip install wxpython"
  #- "%CMD_IN_ENV% pip install scipy-0.15.1-cp27-none-any.whl"
  #- "%CMD_IN_ENV% pip install -f http://www.lfd.uci.edu/~gohlke/pythonlibs/ numpy‑1.9.2+mkl‑cp27‑none‑win32.whl"
  - "%CMD_IN_ENV% pip install colour"
  - "%CMD_IN_ENV% pip install nose"
#  - "%CMD_IN_ENV% pip install setuptools pip"
#  - "%CMD_IN_ENV% pip install ."
#  - "%CMD_IN_ENV% pip install ./hypothesis-extra/hypothesis-datetime/"
#  - "%CMD_IN_ENV% pip install ./hypothesis-extra/hypothesis-pytest/"

  ### ----------------------
  ### Download wxPython
  ### ----------------------

  #http://downloads.sourceforge.net/project/wxpython/wxPython/2.8.12.1/wxPython-src-2.8.12.1.tar.bz2?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fwxpython%2Ffiles%2FwxPython%2F2.8.12.1%2F&ts=1430329632&use_mirror=iweb

  # download wxPython Source (Powershell >= 3.0)
  #- ps: Invoke-WebRequest "http://downloads.sourceforge.net/project/wxpython/wxPython/3.0.2.0/wxPython-src-3.0.2.0.tar.bz2?r=&ts=1430242200&use_mirror=softlayer-dal" -Outfile 'C:\Temp\wxPython_source.tar.bz2'

  # download wxPython Source (Powershell 2.0)
#  - ps: (new-object net.webclient).DownloadFile('http://downloads.sourceforge.net/project/wxpython/wxPython/3.0.2.0/wxPython-src-3.0.2.0.tar.bz2?r=&ts=1430242200&use_mirror=softlayer-dal', 'C:\Temp\wxPython_source.tar.bz2')
#  - ps: (new-object net.webclient).DownloadFile("http://wxpython.org/Phoenix/snapshot-builds/wxPython_Phoenix-3.0.3.dev1820+49a8884-cp27-none-win32.whl", 'C:\\Temp\\wxPython_Phoenix-3.0.3.dev1820+49a8884-cp27-none-win32.whl')
#  - "%CMD_IN_ENV% pip install wheel"
#  - "%CMD_IN_ENV% pip install C:\\Temp\\wxPython_Phoenix-3.0.3.dev1820+49a8884-cp27-none-win32.whl"


  ### ----------------------
  ### Extract wxPython
  ### ----------------------


  # First extract .bz2 file
  #- ps: start-process "C:\\Program Files\\7-Zip\\7z.exe" "e C:\\Temp\\wxPython_source.tar.bz2 -oC:\\Temp" -Wait
  # In order to get 7-Zip's output redirected, I need to use this big block:
#  - ps: $psi = New-object System.Diagnostics.ProcessStartInfo
#  - ps: $psi.CreateNoWindow = $true
#  - ps: $psi.UseShellExecute = $false
#  - ps: $psi.RedirectStandardOutput = $true
#  - ps: $psi.RedirectStandardError = $true
#  - ps: $psi.FileName = 'C:\Program Files\7-Zip\7z.exe'
#  - ps: $psi.Arguments = @("e C:\\Temp\\wxPython_source.tar.bz2 -y -oC:\\Temp")
#  - ps: $process = New-Object System.Diagnostics.Process
#  - ps: $process.StartInfo = $psi
#  - ps: $process.Start()
#  - ps: $output = $process.StandardOutput.ReadToEnd()
#  - ps: $process.WaitForExit()
#  - ps: $output

  # Then extract the .tar file to a directory
#  - ps: start-process "C:\\Program Files\\7-Zip\\7z.exe" "e C:\\Temp\\wxPython_source.tar -y -oC:\\Temp\\wxPython_source" -Wait
  # In order to get 7-Zip's output redirected, I need to use this big block:
#  - ps: $psi = New-object System.Diagnostics.ProcessStartInfo
#  - ps: $psi.CreateNoWindow = $true
#  - ps: $psi.UseShellExecute = $false
#  - ps: $psi.RedirectStandardOutput = $true
#  - ps: $psi.RedirectStandardError = $true
#  - ps: $psi.FileName = 'C:\Program Files\7-Zip\7z.exe'
#  - ps: $psi.Arguments = @("e C:\\Temp\\wxPython_source.tar -y -oC:\\Temp\\wxPython_source")
#  - ps: $process = New-Object System.Diagnostics.Process
#  - ps: $process.StartInfo = $psi
  #- ps: $process.Start()
  #- ps: $output = $process.StandardOutput.ReadToEnd()
  #- ps: $process.WaitForExit()
  #- ps: $output

  ### ----------------------
  ### Build wxPython
  ### ----------------------

  #- python "C:\Temp\wxPython_source\build-wxpython.py" --install


build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Build the compiled extension and run the project tests
  #- "%CMD_IN_ENV% nosetests"
  - python --version
#  - "%CMD_IN_ENV% python -m pytest hypothesis-extra/hypothesis-datetime/tests"
#  - "%CMD_IN_ENV% python -m pytest hypothesis-extra/hypothesis-pytest/tests"

#after_test:
  # if tests OK, create whl package
#  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
#  - ps: "ls dist"

#artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
#  - path: dist\*

